% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot2.R
\name{plot2}
\alias{plot2}
\alias{plot2.default}
\alias{plot2.data.frame}
\title{Conveniently Create a New \code{ggplot}}
\usage{
plot2(
  .data,
  x = NULL,
  y = NULL,
  category = NULL,
  facet = NULL,
  type = "column",
  title = NULL,
  subtitle = NULL,
  tag = NULL,
  caption = NULL,
  bins = NULL,
  category.focus = NULL,
  category.sort = TRUE,
  colour = getOption("plot2.colours", "certe"),
  colour.extended_spectrum = FALSE,
  colour.fill = NULL,
  colour.opacity = 0,
  datalabels = TRUE,
  datalabels.fill = "white",
  datalabels.round = ifelse(y.percent, 1, 2),
  datalabels.size = 3,
  decimal_comma = ",",
  facet.bold = TRUE,
  facet.drop = FALSE,
  facet.fill = NULL,
  facet.fixed_y = FALSE,
  facet.italic = FALSE,
  facet.margin = 8,
  facet.nrow = NULL,
  facet.position = "top",
  facet.relative = FALSE,
  facet.repeat_lbls_x = TRUE,
  facet.repeat_lbls_y = TRUE,
  facet.size = 10,
  facet.sort = TRUE,
  horizontal = FALSE,
  jitter_seed = 1,
  legend.barheight = 5,
  legend.barwidth = 1,
  legend.italic = FALSE,
  legend.position = "top",
  legend.reverse = NULL,
  legend.title = "",
  linetype = 1,
  markdown = TRUE,
  na.replace = "(onbekend)",
  na.rm = FALSE,
  print = FALSE,
  reverse = horizontal,
  size = ifelse(type \%in\% c("point", "jitter", "boxplot", "violin"), 2, 0.75),
  stacked = FALSE,
  stackedpercent = FALSE,
  subtitle.maxlength = 60,
  summarise_function = base::sum,
  text.factor = 1,
  text.font_family = "Calibri",
  theme = theme_minimal2(),
  title.maxlength = 60,
  width = ifelse(type \%in\% c("jitter", "boxplot", "violin"), 0.75, 0.5),
  x.date_breaks = "1 day",
  x.date_labels = "d mmm",
  x.expand = 0.5,
  x.lbl_align = NULL,
  x.lbl_angle = 0,
  x.lbl_italic = FALSE,
  x.limits = NULL,
  x.max_items = Inf,
  x.max_txt = "(rest, x{n})",
  x.position = "bottom",
  x.remove = FALSE,
  x.sort = TRUE,
  x.title = NULL,
  y.24h = FALSE,
  y.age = FALSE,
  y.breaks = NULL,
  y.expand = 0.25,
  y.labels = NULL,
  y.limits = NULL,
  y.percent = FALSE,
  y.percent_break = 10,
  y.position = "left",
  y.remove = FALSE,
  y.title = NULL,
  y.trans = "identity",
  x.category = NULL,
  y.category = NULL,
  ...
)

\method{plot2}{default}(.data = NULL, x = NULL, y = NULL, category = NULL, facet = NULL, ...)

\method{plot2}{data.frame}(
  .data = NULL,
  x = NULL,
  y = NULL,
  category = NULL,
  facet = NULL,
  type = "column",
  datalabels = TRUE,
  x.category = NULL,
  y.category = NULL,
  ...
)
}
\arguments{
\item{.data}{data to plot}
}
\description{
These functions create \link{ggplot2:ggplot} objects, but work in a more convenient way than the \code{ggplot2} package. By design, the \code{ggplot2} package requires users to use a lot of functions, while the \code{certeplot2} package requires to use only arguments in one function.
}
\details{
The \code{\link[=plot2]{plot2()}} function uses the \code{ggplot2} package for plotting and provides:
\itemize{
\item A convenient wrapper around many \code{ggplot2} functions such as \code{\link[=ggplot]{ggplot()}}, \code{\link[=geom_col]{geom_col()}}, \code{\link[=facet_wrap]{facet_wrap()}}, \code{\link[=labs]{labs()}}, etc.
\item Writing as few lines of codes as possible
\item Benefits from Microsoft Excel:
\itemize{
\item The y axis starts at 0
\item The y scale contains extra space to read all data points
\item Date breaks can be written in a readable format such as "d mmm yyyy"
\item Data labels can easily be printed
}
\item Easy plotting in three 'directions': \code{x} (the regular x axis), \code{category} (replaces 'fill' and 'colour') and \code{facet}
\item Easy way for sorting data in may ways (such as on alphabet, numeric value, frequency, original data order), by setting a single argument for the 'direction': \code{x.sort}, \code{category.sort} and \code{facet.sort}
\item Easy limiting values, e.g. by setting \code{x.max_items = 5}
\item Markdown support for any label, with any theme
\item An extra clean, minimalistic theme with a lot of whitespace that is ideal for printing
}

The \code{ggplot2} package in conjunction with the \code{tidyr}, \code{forcats} and \code{cleaner} packages can provide above functionalities, but the goal of the \code{\link[=plot2]{plot2()}} function is to generalise this into one function. Less typing, faster coding.
}
\examples{
head(admitted_patients)

plot2(iris, x = Sepal.Width, y = Sepal.Length, category = Species, type = "point")

plot2(iris, x = Species, y = Sepal.Length, type = "boxplot")

library(dplyr, warn.conflicts = FALSE)

mtcars \%>\% 
  plot2(mpg, hp,
        type = "point")
        

}
