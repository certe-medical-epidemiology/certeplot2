% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot2.R
\name{plot2}
\alias{plot2}
\title{Conveniently Create a New \code{ggplot}}
\usage{
plot2(.data, ...)
}
\arguments{
\item{.data}{data to plot}
}
\description{
The \code{\link[=plot2]{plot2()}} function is a convenient wrapper around many \code{\link[ggplot2:ggplot]{ggplot2}} functions. By design, the \code{ggplot2} package requires users to use a lot of functions, while the \code{\link[=plot2]{plot2()}} function auto-determines needs and only requires to define arguments in one single function.

See \link{plot2-methods} for all implemented methods for different object classes.
}
\details{
The \code{\link[=plot2]{plot2()}} function is a convenient wrapper around many \code{\link[ggplot2:ggplot]{ggplot2}} functions such as \code{\link[ggplot2:ggplot]{ggplot()}}, \code{\link[ggplot2:geom_bar]{geom_col()}}, \code{\link[ggplot2:facet_wrap]{facet_wrap()}}, \code{\link[ggplot2:labs]{labs()}}, etc., and provides:
\itemize{
\item Writing as few lines of codes as possible
\item Easy plotting in three 'directions': \code{x} (the regular x axis), \code{category} (replaces 'fill' and 'colour') and \code{facet}
\item Automatic setting of these 'directions' based on the input data
\item Easy way for sorting data in many ways (such as on alphabet, numeric value, frequency, original data order), by setting a single argument for the 'direction': \code{x.sort}, \code{category.sort} and \code{facet.sort}
\item Easy limiting values, e.g. by setting \code{x.max_items = 5} or \code{category.max_items = 5}
\item Markdown support for any label, with any theme
\item An extra clean, minimalistic theme with a lot of whitespace (but without unnecessary margins) that is ideal for printing: \code{\link[=theme_minimal2]{theme_minimal2()}}
\item Some conveniences from Microsoft Excel:
\itemize{
\item The y axis starts at 0
\item The y scale expands at the top to be better able to interpret all data points
\item Date breaks can be written in a readable format such as "d mmm yyyy"
\item Data labels can easily be printed and are automatically determined
}
\item Support for any \code{ggplot2} extension based on \code{\link[ggplot2:fortify]{ggplot2::fortify()}}
}

The \code{ggplot2} package in conjunction with the \code{tidyr}, \code{forcats} and \code{cleaner} packages can provide above functionalities, but the goal of the \code{\link[=plot2]{plot2()}} function is to generalise this into one function. Less typing, faster coding.
}
\examples{
# no variables determined, plot2() tries for itself:
plot2(iris)

# x and y set, no addition mapping will be set:
plot2(iris, Sepal.Width, Sepal.Length)

plot2(iris, x = Species, y = Sepal.Length, type = "boxplot")

library(dplyr, warn.conflicts = FALSE)

# automatically takes first columns, will be points since both are numeric
mtcars \%>\% 
  plot2()
mtcars \%>\% 
  plot2(mpg, hp)
  
head(admitted_patients)

# if there are more Y values than groups, the default will be boxplot
admitted_patients \%>\%
  plot2(x = hospital)

# the arguments are in this order: x, y, category, facet
admitted_patients \%>\%
  plot2(hospital, age, gender)
        
admitted_patients \%>\%
  plot2(x = hospital,
        category = gender,
        colour = c("F" = "orange3", "M" = "purple3"),
        colour_fill = "white",
        y.age = TRUE)
  
# plot2() supports all S3 extensions available through ggplot2::fortify():
mtcars \%>\% 
  lm(mpg ~ hp, data = .) \%>\% 
  plot2(title = "Titles/captions *support* **markdown**",
        x.title = "*hp*")
}
