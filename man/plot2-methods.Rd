% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot2-methods.R
\name{plot2-methods}
\alias{plot2-methods}
\alias{plot2.default}
\alias{plot2.numeric}
\alias{plot2.freq}
\alias{plot2.sf}
\alias{plot2.data.frame}
\alias{plot2.bug_drug_combinations}
\title{Methods for \code{\link[=plot2]{plot2()}}}
\usage{
\method{plot2}{default}(
  .data,
  x = NULL,
  y = NULL,
  category = NULL,
  facet = NULL,
  type = NULL,
  x.title = NULL,
  y.title = NULL,
  category.title = NULL,
  title = NULL,
  subtitle = NULL,
  caption = NULL,
  tag = NULL,
  title.linelength = 60,
  title.colour = "black",
  subtitle.linelength = 60,
  subtitle.colour = "grey35",
  na.replace = "(??)",
  na.rm = FALSE,
  facet.position = "top",
  facet.fill = NULL,
  facet.bold = TRUE,
  facet.italic = FALSE,
  facet.size = 10,
  facet.margin = 8,
  facet.repeat_lbls_x = TRUE,
  facet.repeat_lbls_y = FALSE,
  facet.fixed_y = FALSE,
  facet.drop = FALSE,
  facet.nrow = NULL,
  facet.relative = FALSE,
  x.date_breaks = NULL,
  x.date_labels = NULL,
  category.focus = NULL,
  colour = "certe",
  colour_fill = NULL,
  x.lbl_angle = 0,
  x.lbl_align = NULL,
  x.lbl_italic = FALSE,
  x.remove = FALSE,
  x.position = "bottom",
  x.max_items = Inf,
  x.max_txt = "(rest, x \%n)",
  category.max_items = Inf,
  category.max_txt = "(rest, x \%n)",
  facet.max_items = Inf,
  facet.max_txt = "(rest, x \%n)",
  x.breaks = NULL,
  x.breaks_n = NULL,
  x.trans = "identity",
  x.expand = 0.5,
  x.limits = NULL,
  x.character = NULL,
  y.remove = FALSE,
  y.24h = FALSE,
  y.age = FALSE,
  y.percent = FALSE,
  y.percent_break = 0.1,
  y.breaks = NULL,
  y.limits = NULL,
  y.labels = NULL,
  y.expand = 0.25,
  y.trans = "identity",
  y.position = "left",
  category.labels = NULL,
  category.percent = FALSE,
  category.breaks = NULL,
  category.limits = NULL,
  category.expand = 0,
  category.midpoint = NULL,
  category.trans = "identity",
  x.sort = NULL,
  category.sort = TRUE,
  facet.sort = TRUE,
  datalabels = TRUE,
  datalabels.round = ifelse(y.percent, 2, 1),
  datalabels.format = "\%n",
  datalabels.colour = "grey25",
  datalabels.fill = NULL,
  datalabels.size = (3 * text_factor),
  datalabels.angle = 0,
  decimal.mark = ",",
  big.mark = ifelse(decimal.mark == ",", ".", ","),
  summarise_function = base::sum,
  stacked = FALSE,
  stackedpercent = FALSE,
  horizontal = FALSE,
  reverse = horizontal,
  smooth = NULL,
  smooth.method = NULL,
  smooth.formula = NULL,
  smooth.se = TRUE,
  smooth.level = 0.95,
  smooth.alpha = 0.15,
  smooth.size = 0.75,
  smooth.linetype = 3,
  size = NULL,
  linetype = 1,
  binwidth = NULL,
  width = NULL,
  jitter_seed = NA,
  violin_scale = "count",
  legend.position = "top",
  legend.title = NULL,
  legend.reverse = FALSE,
  legend.barheight = 6,
  legend.barwidth = 1.5,
  legend.nbin = 300,
  legend.italic = FALSE,
  zoom = FALSE,
  sep = " / ",
  print = FALSE,
  text_factor = 1,
  family = getOption("plot2.family"),
  theme = getOption("plot2.theme", "theme_minimal2"),
  markdown = TRUE,
  taxonomy_italic = FALSE,
  x.category = NULL,
  y.category = NULL,
  ...
)

\method{plot2}{numeric}(
  .data,
  x = NULL,
  y = NULL,
  category = NULL,
  facet = NULL,
  type = "point",
  x.title = NULL,
  y.title = NULL,
  category.title = NULL,
  title = NULL,
  subtitle = NULL,
  caption = NULL,
  tag = NULL,
  title.linelength = 60,
  title.colour = "black",
  subtitle.linelength = 60,
  subtitle.colour = "grey35",
  na.replace = "(??)",
  na.rm = FALSE,
  facet.position = "top",
  facet.fill = NULL,
  facet.bold = TRUE,
  facet.italic = FALSE,
  facet.size = 10,
  facet.margin = 8,
  facet.repeat_lbls_x = TRUE,
  facet.repeat_lbls_y = FALSE,
  facet.fixed_y = FALSE,
  facet.drop = FALSE,
  facet.nrow = NULL,
  facet.relative = FALSE,
  x.date_breaks = NULL,
  x.date_labels = NULL,
  category.focus = NULL,
  colour = "certe",
  colour_fill = NULL,
  x.lbl_angle = 0,
  x.lbl_align = NULL,
  x.lbl_italic = FALSE,
  x.remove = FALSE,
  x.position = "bottom",
  x.max_items = Inf,
  x.max_txt = "(rest, x \%n)",
  category.max_items = Inf,
  category.max_txt = "(rest, x \%n)",
  facet.max_items = Inf,
  facet.max_txt = "(rest, x \%n)",
  x.breaks = NULL,
  x.breaks_n = NULL,
  x.trans = "identity",
  x.expand = 0.5,
  x.limits = NULL,
  x.character = NULL,
  y.remove = FALSE,
  y.24h = FALSE,
  y.age = FALSE,
  y.percent = FALSE,
  y.percent_break = 0.1,
  y.breaks = NULL,
  y.limits = NULL,
  y.labels = NULL,
  y.expand = 0.25,
  y.trans = "identity",
  y.position = "left",
  category.labels = NULL,
  category.percent = FALSE,
  category.breaks = NULL,
  category.limits = NULL,
  category.expand = 0,
  category.midpoint = NULL,
  category.trans = "identity",
  x.sort = NULL,
  category.sort = TRUE,
  facet.sort = TRUE,
  datalabels = FALSE,
  datalabels.round = ifelse(y.percent, 2, 1),
  datalabels.format = "\%n",
  datalabels.colour = "grey25",
  datalabels.fill = NULL,
  datalabels.size = (3 * text_factor),
  datalabels.angle = 0,
  decimal.mark = ",",
  big.mark = ifelse(decimal.mark == ",", ".", ","),
  summarise_function = base::sum,
  stacked = FALSE,
  stackedpercent = FALSE,
  horizontal = FALSE,
  reverse = horizontal,
  smooth = NULL,
  smooth.method = NULL,
  smooth.formula = NULL,
  smooth.se = TRUE,
  smooth.level = 0.95,
  smooth.alpha = 0.15,
  smooth.size = 0.75,
  smooth.linetype = 3,
  size = NULL,
  linetype = 1,
  binwidth = NULL,
  width = NULL,
  jitter_seed = NA,
  violin_scale = "count",
  legend.position = "top",
  legend.title = NULL,
  legend.reverse = FALSE,
  legend.barheight = 6,
  legend.barwidth = 1.5,
  legend.nbin = 300,
  legend.italic = FALSE,
  zoom = FALSE,
  sep = " / ",
  print = FALSE,
  text_factor = 1,
  family = getOption("plot2.family"),
  theme = getOption("plot2.theme", "theme_minimal2"),
  markdown = TRUE,
  taxonomy_italic = FALSE,
  x.category = NULL,
  y.category = NULL,
  ...
)

\method{plot2}{freq}(
  .data,
  x = .data$item,
  y = .data$count,
  category = NULL,
  facet = NULL,
  type = NULL,
  x.title = "Item",
  y.title = "Count",
  category.title = NULL,
  title = NULL,
  subtitle = NULL,
  caption = NULL,
  tag = NULL,
  title.linelength = 60,
  title.colour = "black",
  subtitle.linelength = 60,
  subtitle.colour = "grey35",
  na.replace = "(??)",
  na.rm = FALSE,
  facet.position = "top",
  facet.fill = NULL,
  facet.bold = TRUE,
  facet.italic = FALSE,
  facet.size = 10,
  facet.margin = 8,
  facet.repeat_lbls_x = TRUE,
  facet.repeat_lbls_y = FALSE,
  facet.fixed_y = FALSE,
  facet.drop = FALSE,
  facet.nrow = NULL,
  facet.relative = FALSE,
  x.date_breaks = NULL,
  x.date_labels = NULL,
  category.focus = NULL,
  colour = "certe",
  colour_fill = NULL,
  x.lbl_angle = 0,
  x.lbl_align = NULL,
  x.lbl_italic = FALSE,
  x.remove = FALSE,
  x.position = "bottom",
  x.max_items = Inf,
  x.max_txt = "(rest, x \%n)",
  category.max_items = Inf,
  category.max_txt = "(rest, x \%n)",
  facet.max_items = Inf,
  facet.max_txt = "(rest, x \%n)",
  x.breaks = NULL,
  x.breaks_n = NULL,
  x.trans = "identity",
  x.expand = 0.5,
  x.limits = NULL,
  x.character = NULL,
  y.remove = FALSE,
  y.24h = FALSE,
  y.age = FALSE,
  y.percent = FALSE,
  y.percent_break = 0.1,
  y.breaks = NULL,
  y.limits = NULL,
  y.labels = NULL,
  y.expand = 0.25,
  y.trans = "identity",
  y.position = "left",
  category.labels = NULL,
  category.percent = FALSE,
  category.breaks = NULL,
  category.limits = NULL,
  category.expand = 0,
  category.midpoint = NULL,
  category.trans = "identity",
  x.sort = "freq-desc",
  category.sort = TRUE,
  facet.sort = TRUE,
  datalabels = TRUE,
  datalabels.round = ifelse(y.percent, 2, 1),
  datalabels.format = "\%n",
  datalabels.colour = "grey25",
  datalabels.fill = NULL,
  datalabels.size = (3 * text_factor),
  datalabels.angle = 0,
  decimal.mark = ",",
  big.mark = ifelse(decimal.mark == ",", ".", ","),
  summarise_function = base::sum,
  stacked = FALSE,
  stackedpercent = FALSE,
  horizontal = FALSE,
  reverse = horizontal,
  smooth = NULL,
  smooth.method = NULL,
  smooth.formula = NULL,
  smooth.se = TRUE,
  smooth.level = 0.95,
  smooth.alpha = 0.15,
  smooth.size = 0.75,
  smooth.linetype = 3,
  size = NULL,
  linetype = 1,
  binwidth = NULL,
  width = NULL,
  jitter_seed = NA,
  violin_scale = "count",
  legend.position = "top",
  legend.title = NULL,
  legend.reverse = FALSE,
  legend.barheight = 6,
  legend.barwidth = 1.5,
  legend.nbin = 300,
  legend.italic = FALSE,
  zoom = FALSE,
  sep = " / ",
  print = FALSE,
  text_factor = 1,
  family = getOption("plot2.family"),
  theme = getOption("plot2.theme", "theme_minimal2"),
  markdown = TRUE,
  taxonomy_italic = FALSE,
  x.category = NULL,
  y.category = NULL,
  ...
)

\method{plot2}{sf}(
  .data,
  x = NULL,
  y = NULL,
  category = NULL,
  facet = NULL,
  type = NULL,
  x.title = NULL,
  y.title = NULL,
  category.title = NULL,
  title = NULL,
  subtitle = NULL,
  caption = NULL,
  tag = NULL,
  title.linelength = 60,
  title.colour = "black",
  subtitle.linelength = 60,
  subtitle.colour = "grey35",
  na.replace = "(??)",
  na.rm = FALSE,
  facet.position = "top",
  facet.fill = NULL,
  facet.bold = TRUE,
  facet.italic = FALSE,
  facet.size = 10,
  facet.margin = 8,
  facet.repeat_lbls_x = TRUE,
  facet.repeat_lbls_y = FALSE,
  facet.fixed_y = FALSE,
  facet.drop = FALSE,
  facet.nrow = NULL,
  facet.relative = FALSE,
  x.date_breaks = NULL,
  x.date_labels = NULL,
  category.focus = NULL,
  colour = "grey25",
  colour_fill = c("white", "certeblauw"),
  x.lbl_angle = 0,
  x.lbl_align = NULL,
  x.lbl_italic = FALSE,
  x.remove = FALSE,
  x.position = "bottom",
  x.max_items = Inf,
  x.max_txt = "(rest, x \%n)",
  category.max_items = Inf,
  category.max_txt = "(rest, x \%n)",
  facet.max_items = Inf,
  facet.max_txt = "(rest, x \%n)",
  x.breaks = NULL,
  x.breaks_n = NULL,
  x.trans = "identity",
  x.expand = 0,
  x.limits = NULL,
  x.character = NULL,
  y.remove = FALSE,
  y.24h = FALSE,
  y.age = FALSE,
  y.percent = FALSE,
  y.percent_break = 0.1,
  y.breaks = NULL,
  y.limits = NULL,
  y.labels = NULL,
  y.expand = 0,
  y.trans = "identity",
  y.position = "left",
  category.labels = NULL,
  category.percent = FALSE,
  category.breaks = NULL,
  category.limits = NULL,
  category.expand = 0,
  category.midpoint = NULL,
  category.trans = "identity",
  x.sort = NULL,
  category.sort = TRUE,
  facet.sort = TRUE,
  datalabels = TRUE,
  datalabels.round = ifelse(y.percent, 2, 1),
  datalabels.format = NULL,
  datalabels.colour = "black",
  datalabels.fill = NULL,
  datalabels.size = (3 * text_factor),
  datalabels.angle = 0,
  decimal.mark = ",",
  big.mark = ifelse(decimal.mark == ",", ".", ","),
  summarise_function = base::sum,
  stacked = FALSE,
  stackedpercent = FALSE,
  horizontal = FALSE,
  reverse = horizontal,
  smooth = NULL,
  smooth.method = NULL,
  smooth.formula = NULL,
  smooth.se = TRUE,
  smooth.level = 0.95,
  smooth.alpha = 0.15,
  smooth.size = 0.75,
  smooth.linetype = 3,
  size = 0.1,
  linetype = 1,
  binwidth = NULL,
  width = NULL,
  jitter_seed = NA,
  violin_scale = "count",
  legend.position = "right",
  legend.title = TRUE,
  legend.reverse = FALSE,
  legend.barheight = 6,
  legend.barwidth = 1.5,
  legend.nbin = 300,
  legend.italic = FALSE,
  zoom = FALSE,
  sep = " / ",
  print = FALSE,
  text_factor = 1,
  family = getOption("plot2.family"),
  theme = theme_minimal2(panel.grid.major = element_blank(), panel.grid.minor =
    element_blank(), panel.border = element_blank(), axis.title = element_blank(),
    axis.text = element_blank(), axis.line = element_blank(), axis.ticks =
    element_blank()),
  markdown = TRUE,
  taxonomy_italic = FALSE,
  x.category = NULL,
  y.category = NULL,
  ...
)

\method{plot2}{data.frame}(
  .data,
  x = NULL,
  y = NULL,
  category = NULL,
  facet = NULL,
  type = NULL,
  x.title = NULL,
  y.title = NULL,
  category.title = NULL,
  title = NULL,
  subtitle = NULL,
  caption = NULL,
  tag = NULL,
  title.linelength = 60,
  title.colour = "black",
  subtitle.linelength = 60,
  subtitle.colour = "grey35",
  na.replace = "(??)",
  na.rm = FALSE,
  facet.position = "top",
  facet.fill = NULL,
  facet.bold = TRUE,
  facet.italic = FALSE,
  facet.size = 10,
  facet.margin = 8,
  facet.repeat_lbls_x = TRUE,
  facet.repeat_lbls_y = FALSE,
  facet.fixed_y = FALSE,
  facet.drop = FALSE,
  facet.nrow = NULL,
  facet.relative = FALSE,
  x.date_breaks = NULL,
  x.date_labels = NULL,
  category.focus = NULL,
  colour = "certe",
  colour_fill = NULL,
  x.lbl_angle = 0,
  x.lbl_align = NULL,
  x.lbl_italic = FALSE,
  x.remove = FALSE,
  x.position = "bottom",
  x.max_items = Inf,
  x.max_txt = "(rest, x \%n)",
  category.max_items = Inf,
  category.max_txt = "(rest, x \%n)",
  facet.max_items = Inf,
  facet.max_txt = "(rest, x \%n)",
  x.breaks = NULL,
  x.breaks_n = NULL,
  x.trans = "identity",
  x.expand = 0.5,
  x.limits = NULL,
  x.character = NULL,
  y.remove = FALSE,
  y.24h = FALSE,
  y.age = FALSE,
  y.percent = FALSE,
  y.percent_break = 0.1,
  y.breaks = NULL,
  y.limits = NULL,
  y.labels = NULL,
  y.expand = 0.25,
  y.trans = "identity",
  y.position = "left",
  category.labels = NULL,
  category.percent = FALSE,
  category.breaks = NULL,
  category.limits = NULL,
  category.expand = 0,
  category.midpoint = NULL,
  category.trans = "identity",
  x.sort = NULL,
  category.sort = TRUE,
  facet.sort = TRUE,
  datalabels = TRUE,
  datalabels.round = ifelse(y.percent, 2, 1),
  datalabels.format = "\%n",
  datalabels.colour = "grey25",
  datalabels.fill = NULL,
  datalabels.size = (3 * text_factor),
  datalabels.angle = 0,
  decimal.mark = ",",
  big.mark = ifelse(decimal.mark == ",", ".", ","),
  summarise_function = base::sum,
  stacked = FALSE,
  stackedpercent = FALSE,
  horizontal = FALSE,
  reverse = horizontal,
  smooth = NULL,
  smooth.method = NULL,
  smooth.formula = NULL,
  smooth.se = TRUE,
  smooth.level = 0.95,
  smooth.alpha = 0.15,
  smooth.size = 0.75,
  smooth.linetype = 3,
  size = NULL,
  linetype = 1,
  binwidth = NULL,
  width = NULL,
  jitter_seed = NA,
  violin_scale = "count",
  legend.position = "top",
  legend.title = NULL,
  legend.reverse = FALSE,
  legend.barheight = 6,
  legend.barwidth = 1.5,
  legend.nbin = 300,
  legend.italic = FALSE,
  zoom = FALSE,
  sep = " / ",
  print = FALSE,
  text_factor = 1,
  family = getOption("plot2.family"),
  theme = getOption("plot2.theme", "theme_minimal2"),
  markdown = TRUE,
  taxonomy_italic = FALSE,
  x.category = NULL,
  y.category = NULL,
  ...
)

\method{plot2}{bug_drug_combinations}(
  .data,
  x = ab,
  y = value,
  category = name,
  facet = mo,
  type = "column",
  x.title = "",
  y.title = "",
  category.title = NULL,
  title = NULL,
  subtitle = NULL,
  caption = NULL,
  tag = NULL,
  title.linelength = 60,
  title.colour = "black",
  subtitle.linelength = 60,
  subtitle.colour = "grey35",
  na.replace = "(??)",
  na.rm = FALSE,
  facet.position = "top",
  facet.fill = NULL,
  facet.bold = TRUE,
  facet.italic = FALSE,
  facet.size = 10,
  facet.margin = 8,
  facet.repeat_lbls_x = TRUE,
  facet.repeat_lbls_y = FALSE,
  facet.fixed_y = FALSE,
  facet.drop = FALSE,
  facet.nrow = NULL,
  facet.relative = FALSE,
  x.date_breaks = NULL,
  x.date_labels = NULL,
  category.focus = NULL,
  colour = "certe_rsi2",
  colour_fill = NULL,
  x.lbl_angle = ifelse(horizontal, 0, 90),
  x.lbl_align = NULL,
  x.lbl_italic = FALSE,
  x.remove = FALSE,
  x.position = "bottom",
  x.max_items = Inf,
  x.max_txt = "(rest, x \%n)",
  category.max_items = Inf,
  category.max_txt = "(rest, x \%n)",
  facet.max_items = Inf,
  facet.max_txt = "(rest, x \%n)",
  x.breaks = NULL,
  x.breaks_n = NULL,
  x.trans = "identity",
  x.expand = 0.5,
  x.limits = NULL,
  x.character = NULL,
  y.remove = FALSE,
  y.24h = FALSE,
  y.age = FALSE,
  y.percent = FALSE,
  y.percent_break = 0.1,
  y.breaks = NULL,
  y.limits = NULL,
  y.labels = NULL,
  y.expand = 0.25,
  y.trans = "identity",
  y.position = "left",
  category.labels = NULL,
  category.percent = FALSE,
  category.breaks = NULL,
  category.limits = NULL,
  category.expand = 0,
  category.midpoint = NULL,
  category.trans = "identity",
  x.sort = NULL,
  category.sort = FALSE,
  facet.sort = TRUE,
  datalabels = TRUE,
  datalabels.round = ifelse(y.percent, 2, 1),
  datalabels.format = "\%n",
  datalabels.colour = "grey25",
  datalabels.fill = NULL,
  datalabels.size = (3 * text_factor),
  datalabels.angle = 0,
  decimal.mark = ",",
  big.mark = ifelse(decimal.mark == ",", ".", ","),
  summarise_function = base::sum,
  stacked = FALSE,
  stackedpercent = TRUE,
  horizontal = TRUE,
  reverse = TRUE,
  smooth = NULL,
  smooth.method = NULL,
  smooth.formula = NULL,
  smooth.se = TRUE,
  smooth.level = 0.95,
  smooth.alpha = 0.15,
  smooth.size = 0.75,
  smooth.linetype = 3,
  size = NULL,
  linetype = 1,
  binwidth = NULL,
  width = NULL,
  jitter_seed = NA,
  violin_scale = "count",
  legend.position = "top",
  legend.title = NULL,
  legend.reverse = FALSE,
  legend.barheight = 6,
  legend.barwidth = 1.5,
  legend.nbin = 300,
  legend.italic = FALSE,
  zoom = FALSE,
  sep = " / ",
  print = FALSE,
  text_factor = 1,
  family = getOption("plot2.family"),
  theme = getOption("plot2.theme", "theme_minimal2"),
  markdown = TRUE,
  taxonomy_italic = TRUE,
  x.category = NULL,
  y.category = NULL,
  minimum = 30,
  remove_intrinsic_resistant = TRUE,
  language = "nl",
  ...
)
}
\arguments{
\item{.data}{data to plot}

\item{x}{plotting 'direction': the x axis}

\item{y}{values to use for plotting along the y axis, can also be a calculation of a variable, e.g. \code{max(column1)} or \code{length(unique(person_id))}}

\item{category}{plotting 'direction': the category (called 'fill' and 'colour' in \code{ggplot2})}

\item{facet}{plotting 'direction': the facet}

\item{type}{type of visualisation to use. This can be:
\itemize{
\item A \code{ggplot2} geom name, all geoms are supported. Full function names can be used (e.g., \code{"geom_histogram"}), but they can also be abbreviated (e.g., \code{"h"}, \code{"hist"}). These geoms can be abbreviated by their first character: area (\code{"a"}), boxplot (\code{"b"}), column (\code{"c"}), histogram (\code{"h"}), jitter (\code{"j"}), line (\code{"l"}), point (\code{"p"}), ribbon (\code{"r"}), violin (\code{"v"}). \strong{Please note:} in \code{ggplot2}, 'bars' and 'columns' are equal, while it is common to many people that 'bars' are oriented horizontally and 'columns' are oriented vertically. For this reason, \code{type = "bar"} will set \code{type = "col"} and \code{horizontal = TRUE}.
\item A shortcut. There is currently one supported shortcut: \code{"barpercent"}, which will set \code{type = "col"} and \code{horizontal = TRUE} and \code{x.max_items = 10} and \code{x.sort = "freq-desc"} and \code{datalabels.format = "\%n (\%p)"}.
\item Left blank. In this case, the type will be determined automatically: \code{"boxplot"} if there is no X axis or if the length of unique values per X axis item is at least 3, \code{"point"} if both the Y and X axes are numeric, and \code{"col"} otherwise.
}}

\item{x.title}{text to show on the x axis}

\item{y.title}{text to show on the y axis}

\item{category.title}{text to show for the category (legend title)}

\item{title}{title to show}

\item{subtitle}{subtitle to show}

\item{caption}{caption to show}

\item{tag}{tag to show}

\item{title.linelength}{maximum number of characters per line in the title, before a linebreak occurs}

\item{title.colour}{text colour of the title}

\item{subtitle.linelength}{maximum number of characters per line in the subtitle, before a linebreak occurs}

\item{subtitle.colour}{text colour of the subtitle}

\item{na.replace}{character to put in place of \code{NA} values if \code{na.rm = FALSE}}

\item{na.rm}{remove \code{NA} values from showing in the plot}

\item{facet.position}{settings for the plotting direction \code{facet}}

\item{facet.fill}{settings for the plotting direction \code{facet}}

\item{facet.bold}{settings for the plotting direction \code{facet}}

\item{facet.italic}{settings for the plotting direction \code{facet}}

\item{facet.size}{settings for the plotting direction \code{facet}}

\item{facet.margin}{settings for the plotting direction \code{facet}}

\item{facet.repeat_lbls_x}{settings for the plotting direction \code{facet}}

\item{facet.repeat_lbls_y}{settings for the plotting direction \code{facet}}

\item{facet.fixed_y}{settings for the plotting direction \code{facet}}

\item{facet.drop}{settings for the plotting direction \code{facet}}

\item{facet.nrow}{settings for the plotting direction \code{facet}}

\item{facet.relative}{settings for the plotting direction \code{facet}}

\item{x.date_breaks}{breaks to use when the x axis contains dates, will be determined automatically if left blank}

\item{x.date_labels}{labels to use when the x axis contains dates, will be determined automatically if left blank}

\item{category.focus}{a value of \code{category} that should be highlighted, meaning that all other values in \code{category} will be greyed out. This can also be a numeric value between 1 and the length of unique values of \code{category}, e.g. \code{category.focus = 2} to focus on the second legend item.}

\item{colour}{colour(s) to set, will be evaluated with \code{\link[certestyle:colourpicker]{colourpicker()}} and defaults to Certe colours. This can be a named vector to match values of \code{category}, see \emph{Examples}. Using a named vector can also be used to manually sort the values of \code{category}.}

\item{colour_fill}{colour(s) to be used for filling, will be determined automatically if left blank and will be evaluated with \code{\link[certestyle:colourpicker]{colourpicker()}}}

\item{x.lbl_angle}{angle to use for the x axis in a counter-clockwise direction (i.e., a value of \code{90} will orient the axis labels from bottom to top, a value of \code{270} will orient the axis labels from top to bottom)}

\item{x.lbl_align}{alignment for the x axis between \code{0} (left aligned) and \code{1} (right aligned)}

\item{x.lbl_italic}{a \link{logical} to indicate whether the x labels should in in \emph{italics}}

\item{x.remove}{a \link{logical} to indicate whether the x labels and title should be removed}

\item{x.position}{position of the x axis, defaults to \code{"bottom"}}

\item{x.max_items}{number of maximum items to use, defaults to infinite. All other values will be grouped and summarised using the \code{summarise_function} function. \strong{Please note:} the sorting will be applied first, allowing to e.g. plot the top \emph{n} most frequent values of the x axis by combining \code{x.sort = "freq-desc"} with \verb{x.max_items =} \emph{n}.}

\item{x.max_txt}{the text to use of values not included number of \verb{*.max_items}. The placeholder \verb{\%n} will be replaced with the outcome of the \code{summarise_function} function, the placeholder \verb{\%p} will be replaced with the percentage.}

\item{category.max_items}{number of maximum items to use, defaults to infinite. All other values will be grouped and summarised using the \code{summarise_function} function. \strong{Please note:} the sorting will be applied first, allowing to e.g. plot the top \emph{n} most frequent values of the x axis by combining \code{x.sort = "freq-desc"} with \verb{x.max_items =} \emph{n}.}

\item{category.max_txt}{the text to use of values not included number of \verb{*.max_items}. The placeholder \verb{\%n} will be replaced with the outcome of the \code{summarise_function} function, the placeholder \verb{\%p} will be replaced with the percentage.}

\item{facet.max_items}{number of maximum items to use, defaults to infinite. All other values will be grouped and summarised using the \code{summarise_function} function. \strong{Please note:} the sorting will be applied first, allowing to e.g. plot the top \emph{n} most frequent values of the x axis by combining \code{x.sort = "freq-desc"} with \verb{x.max_items =} \emph{n}.}

\item{facet.max_txt}{the text to use of values not included number of \verb{*.max_items}. The placeholder \verb{\%n} will be replaced with the outcome of the \code{summarise_function} function, the placeholder \verb{\%p} will be replaced with the percentage.}

\item{x.breaks}{a breaks function or numeric vector to use for the x axis}

\item{x.breaks_n}{number of breaks to use for the x axis}

\item{x.trans}{a transformation function to use for the x axis, e.g. \code{"log2"}}

\item{x.expand}{expansion to use for the x axis, can be length 1 or 2}

\item{x.limits}{limits to use for the x axis, can be length 1 or 2}

\item{x.character}{a \link{logical} to indicate whether the values of the x axis should be forced to \link{character}. The default is \code{FALSE}, except for years (x values between 2000 and 2050)}

\item{y.remove}{a \link{logical} to indicate whether the y labels and title should be removed}

\item{y.24h}{a \link{logical} to indicate whether the y labels and breaks should be formatted as 24-hour sequences}

\item{y.age}{a \link{logical} to indicate whether the y labels and breaks should be formatted as ages in years}

\item{y.percent}{a \link{logical} to indicate whether the y labels should be formatted as percentages}

\item{y.percent_break}{number of percentages on which the y axis should have breaks}

\item{y.breaks}{a breaks function or numeric vector to use for the y axis}

\item{y.limits}{limits to use for the y axis, can be length 1 or 2}

\item{y.labels}{a labels function or character vector to use for the y axis}

\item{y.expand}{expansion to use for the y axis, can be length 1 or 2}

\item{y.trans}{a transformation function to use for the y axis, e.g. \code{"log2"}}

\item{y.position}{position of the x axis, defaults to \code{"left"}}

\item{category.labels}{settings for the plotting direction \code{category}}

\item{category.percent}{settings for the plotting direction \code{category}}

\item{category.breaks}{settings for the plotting direction \code{category}}

\item{category.limits}{settings for the plotting direction \code{category}}

\item{category.expand}{settings for the plotting direction \code{category}}

\item{category.midpoint}{settings for the plotting direction \code{category}}

\item{category.trans}{settings for the plotting direction \code{category}}

\item{x.sort}{sorting of the plotting direction, defaults to \code{TRUE}, except for continuous values on the x axis (such as dates and numbers). Applying one of the sorting methods will transform the values to an ordered \link{factor}, which \code{ggplot2} uses to orient the data. Valid values are:
\itemize{
\item \code{TRUE}: sort as \code{"asc"}
\item \code{FALSE}: sort according to the order in the data
\item \code{NULL}: do not sort/transform at all
\item \code{"asc"} or \code{"alpha"}: sort \link{factor}s on their levels, otherwise sort ascending on alphabet, while maintaining numbers in the text (\emph{numeric} sort)
\item \code{"desc"}: sort \link{factor}s on their \link[=rev]{reversed} levels, otherwise sort descending on alphabet, while maintaining numbers in the text (\emph{numeric} sort)
\item \code{"order"} or \code{"inorder"}: sort as \code{FALSE}
\item \code{"freq"} or \code{"freq-desc"}: sort descending according to the frequencies of \code{y} computed by \code{summarise_function} (highest value first)
\item \code{"freq-asc"}: sort ascending according to the frequencies of \code{y} computed by \code{summarise_function} (lowest value first)
}}

\item{category.sort}{sorting of the plotting direction, defaults to \code{TRUE}, except for continuous values on the x axis (such as dates and numbers). Applying one of the sorting methods will transform the values to an ordered \link{factor}, which \code{ggplot2} uses to orient the data. Valid values are:
\itemize{
\item \code{TRUE}: sort as \code{"asc"}
\item \code{FALSE}: sort according to the order in the data
\item \code{NULL}: do not sort/transform at all
\item \code{"asc"} or \code{"alpha"}: sort \link{factor}s on their levels, otherwise sort ascending on alphabet, while maintaining numbers in the text (\emph{numeric} sort)
\item \code{"desc"}: sort \link{factor}s on their \link[=rev]{reversed} levels, otherwise sort descending on alphabet, while maintaining numbers in the text (\emph{numeric} sort)
\item \code{"order"} or \code{"inorder"}: sort as \code{FALSE}
\item \code{"freq"} or \code{"freq-desc"}: sort descending according to the frequencies of \code{y} computed by \code{summarise_function} (highest value first)
\item \code{"freq-asc"}: sort ascending according to the frequencies of \code{y} computed by \code{summarise_function} (lowest value first)
}}

\item{facet.sort}{sorting of the plotting direction, defaults to \code{TRUE}, except for continuous values on the x axis (such as dates and numbers). Applying one of the sorting methods will transform the values to an ordered \link{factor}, which \code{ggplot2} uses to orient the data. Valid values are:
\itemize{
\item \code{TRUE}: sort as \code{"asc"}
\item \code{FALSE}: sort according to the order in the data
\item \code{NULL}: do not sort/transform at all
\item \code{"asc"} or \code{"alpha"}: sort \link{factor}s on their levels, otherwise sort ascending on alphabet, while maintaining numbers in the text (\emph{numeric} sort)
\item \code{"desc"}: sort \link{factor}s on their \link[=rev]{reversed} levels, otherwise sort descending on alphabet, while maintaining numbers in the text (\emph{numeric} sort)
\item \code{"order"} or \code{"inorder"}: sort as \code{FALSE}
\item \code{"freq"} or \code{"freq-desc"}: sort descending according to the frequencies of \code{y} computed by \code{summarise_function} (highest value first)
\item \code{"freq-asc"}: sort ascending according to the frequencies of \code{y} computed by \code{summarise_function} (lowest value first)
}}

\item{datalabels}{variables or character vector to use as datalabels - if left blank, will take the first character column in 'sf' data, and values of \code{y} otherwise. It will print a maximum of 50 labels at default, which can be enforced by explicitly adding \code{datalabels = TRUE}.}

\item{datalabels.round}{number of digits to round the datalabels}

\item{datalabels.format}{format to use for datalabels - \code{"\%n"} will be replaced by the count number, \code{"\%p"} will be replaced by the percentage of the total count. Use \code{datalabels.format = NULL} to not transform the datalabels.}

\item{datalabels.colour}{settings for the datalabels}

\item{datalabels.fill}{settings for the datalabels}

\item{datalabels.size}{settings for the datalabels}

\item{datalabels.angle}{settings for the datalabels}

\item{decimal.mark}{decimal mark, defaults to Dutch use (a comma)}

\item{big.mark}{thousands separator, defaults to Dutch use (a full stop)}

\item{summarise_function}{a \link{function} to use if the data has to be summarised, see \emph{Examples}}

\item{stacked}{a \link{logical} to indicate that values must be stacked}

\item{stackedpercent}{a \link{logical} to indicate that values must be 100\% stacked}

\item{horizontal}{a \link{logical} to turn the plot 90 degrees using \code{\link[ggplot2:coord_flip]{coord_flip()}}. This option also updates some theme options, so that e.g., \code{x.lbl_italic} will still apply to the original x axis.}

\item{reverse}{a \link{logical} to reverse all values of \code{category}}

\item{smooth}{a \link{logical} to add a smooth. In histograms, this will add the density count as an overlaying line (default: \code{TRUE}). In all other cases, a smooth will be added using \code{\link[ggplot2:geom_smooth]{geom_smooth()}} (default: \code{FALSE}).}

\item{smooth.method}{settings for \code{smooth}}

\item{smooth.formula}{settings for \code{smooth}}

\item{smooth.se}{settings for \code{smooth}}

\item{smooth.level}{settings for \code{smooth}}

\item{smooth.alpha}{settings for \code{smooth}}

\item{smooth.size}{settings for \code{smooth}}

\item{smooth.linetype}{settings for \code{smooth}}

\item{size}{size of the geom}

\item{linetype}{linetype of the geom, only suitable for geoms that draw lines}

\item{binwidth}{width of bins (only useful for \code{geom = "histogram"}), can be specified as a numeric value or as a function that calculates width from \code{x}, see \code{\link[ggplot2:geom_histogram]{geom_histogram()}}. It defaults to approx. \code{diff(range(x))} divided by 12 to 22 based on the data.}

\item{width}{width of the geom}

\item{jitter_seed}{seed (randomisation factor) to be set when using \code{type = "jitter"}}

\item{violin_scale}{scale to be set when using \code{type = "violin"}, can also be set to \code{"area"}}

\item{legend.position}{settings for the legend}

\item{legend.title}{settings for the legend}

\item{legend.reverse}{settings for the legend}

\item{legend.barheight}{settings for the legend}

\item{legend.barwidth}{settings for the legend}

\item{legend.nbin}{settings for the legend}

\item{legend.italic}{settings for the legend}

\item{zoom}{a \link{logical} to indicate if the plot should be scaled to the data, i.e., not having the x and y axes to start at 0}

\item{sep}{separator character to use if multiple columns are given to either of the three directions: \code{x}, \code{category} and \code{facet}, e.g. \code{facet = c(column1, column2)}}

\item{print}{a \link{logical} to indicate if the result should be \link[=print]{printed} instead of just returned}

\item{text_factor}{text factor to use, which will apply to all texts shown in the plot}

\item{family}{font family to use, can be set with \code{options(plot2.family = "...")}}

\item{theme}{a valid \code{ggplot2} \link[ggplot2:theme]{theme} to apply, or \code{NULL} to use the default \code{\link[ggplot2:ggtheme]{theme_grey()}}. This argument accepts themes (e.g., \code{theme_bw()}), functions (e.g., \code{theme_bw}) and characters themes (e.g., \code{"theme_bw"}). Can be set with \code{options(plot2.theme = "...")}.}

\item{markdown}{a \link{logical} to turn all labels and titles into markdown-supported labels, by extending their S3 classes with \code{\link[ggtext:element_markdown]{"element_markdown"}}, a feature of the \code{ggtext} package}

\item{taxonomy_italic}{a \link{logical} to transform all labels and titles into italics that are in the \code{microorganisms} data set of the \code{AMR} package}

\item{x.category}{old argument for \code{facet}, now deprecated}

\item{y.category}{old argument for \code{category}, now deprecated}

\item{...}{arguments passed on to methods}

\item{minimum}{minimum number of results, defaults to \code{30}}

\item{remove_intrinsic_resistant}{a \link{logical} to indicate that rows with 100\% resistance must be removed from the data set before plotting}

\item{language}{language to be used for antibiotic names}
}
\description{
These are the implemented methods for different S3 classes to be used in \code{\link[=plot2]{plot2()}}. Since they have an extensive list of arguments, they are placed here on a separate manual page.
}
\details{
For geographic information system (GIS) analysis, use the \code{sf} package with a data set containing geometries. The result can be used as input for \code{\link[=plot2]{plot2()}}.

For antimicrobial resistance (AMR) data analysis, use the \code{\link[AMR:bug_drug_combinations]{bug_drug_combinations()}} function from the \code{AMR} package on a data set with antibiograms. The result can be used as input for \code{\link[=plot2]{plot2()}}.
}
